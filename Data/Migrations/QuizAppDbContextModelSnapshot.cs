// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(QuizAppDbContext))]
    partial class QuizAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Models.GameRound", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfQuestions")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TimeEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStarted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 27, 16, 17, 34, 531, DateTimeKind.Local).AddTicks(5373));

                    b.HasKey("Id");

                    b.ToTable("GameRounds");
                });

            modelBuilder.Entity("Data.Models.QuestionStatistic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AnsweredCorrectly")
                        .HasColumnType("bit");

                    b.Property<Guid?>("GameRoundId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("TimeEnded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeStarted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 5, 27, 16, 17, 34, 543, DateTimeKind.Local).AddTicks(3137));

                    b.HasKey("Id");

                    b.HasIndex("GameRoundId");

                    b.ToTable("QuestionStatistics");
                });

            modelBuilder.Entity("Data.Models.QuestionStatistic", b =>
                {
                    b.HasOne("Data.Models.GameRound", null)
                        .WithMany("QuestionStatistics")
                        .HasForeignKey("GameRoundId");
                });

            modelBuilder.Entity("Data.Models.GameRound", b =>
                {
                    b.Navigation("QuestionStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
